<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hna.hka.archive.management.business.dao.BusinessBankCardMapper" >
  <resultMap id="BaseResultMap" type="com.hna.hka.archive.management.business.model.BusinessBankCard" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="BANK_NAME" property="bankName" jdbcType="VARCHAR" />
    <result column="BANK_CARD" property="bankCard" jdbcType="VARCHAR" />
    <result column="BANK_INFO" property="bankInfo" jdbcType="VARCHAR" />
    <result column="TELEPHONE" property="telephone" jdbcType="VARCHAR" />
    <result column="REJECT_INFO" property="rejectInfo" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
    <!-- 开户行支行 -->
    <result column="BANK_BRANCH" property="bankBranch" jdbcType="VARCHAR" />
    <!-- 开户行省市 -->
    <result column="BANK_PROVINCE" property="bankProvince" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, USER_ID, BANK_NAME, BANK_CARD, BANK_INFO, TELEPHONE, REJECT_INFO, STATE, CREATE_TIME, UPDATE_TIME, BANK_BRANCH, BANK_PROVINCE
  </sql>
 <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from BUSINESS_BANK_CARD
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from BUSINESS_BANK_CARD
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hna.hka.archive.management.business.model.BusinessBankCard" >
    insert into BUSINESS_BANK_CARD (ID, USER_ID, BANK_NAME, 
      BANK_CARD, BANK_INFO, TELEPHONE, 
      REJECT_INFO, STATE, CREATE_TIME, 
      UPDATE_TIME)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{bankName,jdbcType=VARCHAR}, 
      #{bankCard,jdbcType=VARCHAR}, #{bankInfo,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{rejectInfo,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{createTime,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hna.hka.archive.management.business.model.BusinessBankCard" >
    insert into BUSINESS_BANK_CARD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="bankName != null" >
        BANK_NAME,
      </if>
      <if test="bankCard != null" >
        BANK_CARD,
      </if>
      <if test="bankInfo != null" >
        BANK_INFO,
      </if>
      <if test="telephone != null" >
        TELEPHONE,
      </if>
      <if test="rejectInfo != null" >
        REJECT_INFO,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="bankBranch != null" >
        BANK_BRANCH,
      </if>
      <if test="bankProvince != null" >
        BANK_PROVINCE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null" >
        #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankInfo != null" >
        #{bankInfo,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="rejectInfo != null" >
        #{rejectInfo,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="bankBranch != null" >
        #{bankBranch,jdbcType=VARCHAR},
      </if>
      <if test="bankProvince != null" >
        #{bankProvince,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hna.hka.archive.management.business.model.BusinessBankCard" >
    update BUSINESS_BANK_CARD
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null" >
        BANK_NAME = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null" >
        BANK_CARD = #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="bankInfo != null" >
        BANK_INFO = #{bankInfo,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        TELEPHONE = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="rejectInfo != null" >
        REJECT_INFO = #{rejectInfo,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="bankBranch != null" >
        BANK_BRANCH = #{bankBranch,jdbcType=VARCHAR},
      </if>
      <if test="bankProvince != null" >
        BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hna.hka.archive.management.business.model.BusinessBankCard" >
    update BUSINESS_BANK_CARD
    set USER_ID = #{userId,jdbcType=BIGINT},
      BANK_NAME = #{bankName,jdbcType=VARCHAR},
      BANK_CARD = #{bankCard,jdbcType=VARCHAR},
      BANK_INFO = #{bankInfo,jdbcType=VARCHAR},
      TELEPHONE = #{telephone,jdbcType=VARCHAR},
      REJECT_INFO = #{rejectInfo,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=BIT},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <select id="getBankCardList" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT
	A.ID,
	A.USER_ID,
	A.BANK_NAME,
	A.BANK_CARD,
	A.BANK_INFO,
	A.TELEPHONE,
	A.REJECT_INFO,
	A.STATE,
	A.CREATE_TIME,
	A.UPDATE_TIME,
	A.BANK_BRANCH,
	A.BANK_PROVINCE,
	B.USER_NAME AS userName
    FROM
	BUSINESS_BANK_CARD A
	LEFT JOIN BUSINESS_USERS B ON A.USER_ID = B.ID
    <where>
      <if test="telephone != null and telephone != ''">
        AND A.TELEPHONE LIKE CONCAT('%',#{telephone},'%')
      </if>
      <if test="userName != null and userName != ''">
        AND B.USER_NAME LIKE CONCAT('%',#{userName},'%')
      </if>
      <if test="state != null and state != ''">
        AND A.STATE = #{state}
      </if>
    </where>
    ORDER BY A.UPDATE_TIME DESC
  </select>
</mapper>