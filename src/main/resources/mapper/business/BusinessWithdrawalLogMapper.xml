<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hna.hka.archive.management.business.dao.BusinessWithdrawalLogMapper" >
  <resultMap id="BaseResultMap" type="com.hna.hka.archive.management.business.model.BusinessWithdrawalLog" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="OPERATOR_ID" property="operatorId" jdbcType="BIGINT" />
    <result column="BANK_ACCOUNT" property="bankAccount" jdbcType="VARCHAR" />
    <result column="BANK_INFORMATION" property="bankInformation" jdbcType="VARCHAR" />
    <result column="IDENTITY_CARD" property="identityCard" jdbcType="VARCHAR" />
    <result column="MONEY" property="money" jdbcType="DECIMAL" />
    <result column="REASON" property="reason" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, USER_ID, OPERATOR_ID, BANK_ACCOUNT, BANK_INFORMATION, IDENTITY_CARD, MONEY, REASON, 
    STATE, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from BUSINESS_WITHDRAWAL_LOG
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from BUSINESS_WITHDRAWAL_LOG
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hna.hka.archive.management.business.model.BusinessWithdrawalLog" >
    insert into BUSINESS_WITHDRAWAL_LOG (ID, USER_ID, OPERATOR_ID, 
      BANK_ACCOUNT, BANK_INFORMATION, IDENTITY_CARD, 
      MONEY, REASON, STATE, CREATE_TIME, 
      UPDATE_TIME)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{operatorId,jdbcType=BIGINT}, 
      #{bankAccount,jdbcType=VARCHAR}, #{bankInformation,jdbcType=VARCHAR}, #{identityCard,jdbcType=VARCHAR}, 
      #{money,jdbcType=DECIMAL}, #{reason,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR},
      #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hna.hka.archive.management.business.model.BusinessWithdrawalLog" >
    insert into BUSINESS_WITHDRAWAL_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="operatorId != null" >
        OPERATOR_ID,
      </if>
      <if test="bankAccount != null" >
        BANK_ACCOUNT,
      </if>
      <if test="bankInformation != null" >
        BANK_INFORMATION,
      </if>
      <if test="identityCard != null" >
        IDENTITY_CARD,
      </if>
      <if test="money != null" >
        MONEY,
      </if>
      <if test="reason != null" >
        REASON,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankInformation != null" >
        #{bankInformation,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null" >
        #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hna.hka.archive.management.business.model.BusinessWithdrawalLog" >
    update BUSINESS_WITHDRAWAL_LOG
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null" >
        OPERATOR_ID = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="bankAccount != null" >
        BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankInformation != null" >
        BANK_INFORMATION = #{bankInformation,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null" >
        IDENTITY_CARD = #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        MONEY = #{money,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        REASON = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hna.hka.archive.management.business.model.BusinessWithdrawalLog" >
    update BUSINESS_WITHDRAWAL_LOG
    set USER_ID = #{userId,jdbcType=BIGINT},
      OPERATOR_ID = #{operatorId,jdbcType=BIGINT},
      BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
      BANK_INFORMATION = #{bankInformation,jdbcType=VARCHAR},
      IDENTITY_CARD = #{identityCard,jdbcType=VARCHAR},
      MONEY = #{money,jdbcType=DECIMAL},
      REASON = #{reason,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <select id="getWithdrawalLogList" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT
	A.ID,
	A.USER_ID,
	A.OPERATOR_ID,
	A.BANK_ACCOUNT,
	A.BANK_INFORMATION,
	A.IDENTITY_CARD,
	A.MONEY,
	A.REASON,
	A.STATE,
	A.CREATE_TIME,
	A.UPDATE_TIME,
	B.USER_NAME AS userName
    FROM
	BUSINESS_WITHDRAWAL_LOG A
	LEFT JOIN BUSINESS_USERS B ON A.USER_ID = B.ID
	<where>
      <if test="userName != null and userName != ''">
        AND B.USER_NAME LIKE CONCAT('%',#{userName},'%')
      </if>
      <if test="state != null and state != ''">
        AND A.STATE LIKE CONCAT('%',#{state},'%')
      </if>
    </where>
    ORDER BY A.CREATE_TIME DESC
  </select>
</mapper>