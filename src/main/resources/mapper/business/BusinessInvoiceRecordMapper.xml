<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hna.hka.archive.management.business.dao.BusinessInvoiceRecordMapper" >
  <resultMap id="BaseResultMap" type="com.hna.hka.archive.management.business.model.BusinessInvoiceRecord" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="INVOICE_RISE_ID" property="invoiceRiseId" jdbcType="BIGINT" />
    <result column="OPERATOR_ID" property="operatorId" jdbcType="BIGINT" />
    <result column="ADDRESS_ID" property="addressId" jdbcType="BIGINT" />
    <result column="INVOICE_AMOUNT" property="invoiceAmount" jdbcType="DECIMAL" />
    <result column="FAIL_REASONS" property="failReasons" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, USER_ID, INVOICE_RISE_ID, OPERATOR_ID, ADDRESS_ID, INVOICE_AMOUNT, FAIL_REASONS, 
    STATE, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from BUSINESS_INVOICE_RECORD
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from BUSINESS_INVOICE_RECORD
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hna.hka.archive.management.business.model.BusinessInvoiceRecord" >
    insert into BUSINESS_INVOICE_RECORD (ID, USER_ID, INVOICE_RISE_ID, 
      OPERATOR_ID, ADDRESS_ID, INVOICE_AMOUNT, 
      FAIL_REASONS, STATE, CREATE_TIME, 
      UPDATE_TIME)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{invoiceRiseId,jdbcType=BIGINT}, 
      #{operatorId,jdbcType=BIGINT}, #{addressId,jdbcType=BIGINT}, #{invoiceAmount,jdbcType=DECIMAL}, 
      #{failReasons,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR},
      #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hna.hka.archive.management.business.model.BusinessInvoiceRecord" >
    insert into BUSINESS_INVOICE_RECORD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="invoiceRiseId != null" >
        INVOICE_RISE_ID,
      </if>
      <if test="operatorId != null" >
        OPERATOR_ID,
      </if>
      <if test="addressId != null" >
        ADDRESS_ID,
      </if>
      <if test="invoiceAmount != null" >
        INVOICE_AMOUNT,
      </if>
      <if test="failReasons != null" >
        FAIL_REASONS,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="invoiceRiseId != null" >
        #{invoiceRiseId,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=BIGINT},
      </if>
      <if test="invoiceAmount != null" >
        #{invoiceAmount,jdbcType=DECIMAL},
      </if>
      <if test="failReasons != null" >
        #{failReasons,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hna.hka.archive.management.business.model.BusinessInvoiceRecord" >
    update BUSINESS_INVOICE_RECORD
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="invoiceRiseId != null" >
        INVOICE_RISE_ID = #{invoiceRiseId,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null" >
        OPERATOR_ID = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null" >
        ADDRESS_ID = #{addressId,jdbcType=BIGINT},
      </if>
      <if test="invoiceAmount != null" >
        INVOICE_AMOUNT = #{invoiceAmount,jdbcType=DECIMAL},
      </if>
      <if test="failReasons != null" >
        FAIL_REASONS = #{failReasons,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hna.hka.archive.management.business.model.BusinessInvoiceRecord" >
    update BUSINESS_INVOICE_RECORD
    set USER_ID = #{userId,jdbcType=BIGINT},
      INVOICE_RISE_ID = #{invoiceRiseId,jdbcType=BIGINT},
      OPERATOR_ID = #{operatorId,jdbcType=BIGINT},
      ADDRESS_ID = #{addressId,jdbcType=BIGINT},
      INVOICE_AMOUNT = #{invoiceAmount,jdbcType=DECIMAL},
      FAIL_REASONS = #{failReasons,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <select id="getInvoiceRecordList" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT
    A.ID,
    A.USER_ID,
    A.INVOICE_RISE_ID,
    A.OPERATOR_ID,
    A.ADDRESS_ID,
    A.INVOICE_AMOUNT,
    A.FAIL_REASONS,
    A.STATE,
    A.CREATE_TIME,
    A.UPDATE_TIME,
    B.USER_NAME AS userName,
    B.PHONE AS phone,
    C.TITLE_INVOICE AS titleInvoice,
    D.ADDRESS AS address
    FROM
    BUSINESS_INVOICE_RECORD A
    LEFT JOIN BUSINESS_USERS B ON A.USER_ID = B.ID
    LEFT JOIN BUSINESS_INVOICE_RISE C ON A.INVOICE_RISE_ID = C.ID
    LEFT JOIN BUSINESS_INVOICE_MAIL_ADDRESS D ON A.ADDRESS_ID = D.ID
    <where>
      <if test="userName != null and userName != ''">
        AND B.USER_NAME LIKE CONCAT('%',#{userName},'%')
      </if>
    </where>
    ORDER BY A.CREATE_TIME DESC
  </select>
</mapper>