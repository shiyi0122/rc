<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hna.hka.archive.management.Merchant.dao.SysShopWriteOffLogMapper">
    <resultMap id="BaseResultMap" type="com.hna.hka.archive.management.Merchant.model.SysShopWriteOffLog">
        <id column="WRITE_OFF_ID" property="writeOffId" jdbcType="BIGINT"/>
        <result column="EXCHANGE_ID" property="exchangeId" jdbcType="BIGINT"/>
        <result column="EXCHANGE_NAME" property="exchangeName" jdbcType="VARCHAR"/>
        <result column="SCENIC_SPOT_ID" property="scenicSpotId" jdbcType="BIGINT"/>
        <result column="SCENIC_SPOT_NAME" property="scenicSpotName" jdbcType="VARCHAR"/>
        <result column="SHOP_ID" property="shopId" jdbcType="BIGINT"/>
        <result column="SHOP_NAME" property="shopName" jdbcType="VARCHAR"/>
        <result column="WRITE_OFF_DATE" property="writeOffDate" jdbcType="VARCHAR"/>
        <result column="WRITE_OFF_USER_ID" property="writeOffUserId" jdbcType="BIGINT"/>
        <result column="WRITE_OFF_USER_PHONE" property="writeOffUserPhone" jdbcType="VARCHAR"/>
        <result column="CREATE_DATE" property="createDate" jdbcType="VARCHAR"/>
        <result column="UPDATE_DATE" property="updateDate" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        WRITE_OFF_ID
        , EXCHANGE_ID, EXCHANGE_NAME, SCENIC_SPOT_ID, SCENIC_SPOT_NAME, SHOP_ID,
    SHOP_NAME, WRITE_OFF_DATE, WRITE_OFF_USER_ID, WRITE_OFF_USER_PHONE, CREATE_DATE,
    UPDATE_DATE
    </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from SYS_SHOP_WRITE_OFF_LOG
        where WRITE_OFF_ID = #{writeOffId,jdbcType=BIGINT}
    </delete>
    <select id="getShopWriteOffLogList" resultType="com.hna.hka.archive.management.Merchant.model.SysShopWriteOffLog">
        SELECT
        a.WRITE_OFF_ID,
        a.EXCHANGE_ID,
        a.EXCHANGE_NAME,
        a.SCENIC_SPOT_ID,
        a.SCENIC_SPOT_NAME,
        a.SHOP_ID,
        a.SHOP_NAME,
        a.WRITE_OFF_DATE,
        a.WRITE_OFF_USER_ID,
        a.WRITE_OFF_USER_PHONE,
        a.CREATE_DATE,
        a.UPDATE_DATE,
        a.COMMODITY_TYPE
        FROM
        SYS_SHOP_WRITE_OFF_LOG a
        LEFT JOIN SYS_SHOP_COMMODITY b ON a.EXCHANGE_ID = b.COMMODITY_ID
        <where>
            1=1
            <if test="exchangeId != null and exchangeId != ''">
            and EXCHANGE_ID = #{exchangeId}
            </if>
            <if test="scenicSpotId != null and scenicSpotId != ''">
            and SCENIC_SPOT_ID = #{scenicSpotId}
            </if>
            <if test="shopId != null and shopId != ''">
            and SHOP_ID = #{shopId}
            </if>
            <if test="writeOffUserPhone != null and writeOffUserPhone != ''">
            and WRITE_OFF_USER_PHONE like concat('%',#{writeOffUserPhone},'%')
            </if>
            <if test="writeOffDate != null and writeOffDate != ''">
            and WRITE_OFF_DATE like concat('%',#{writeOffDate},'%')
            </if>
            <if test="commodityType != null and commodityType != ''">
            and b.COMMODITY_TYPE = #{commodityType}
            </if>
        </where>
        order by CREATE_DATE desc
    </select>
    <insert id="addShopWriteOffLog" parameterType="com.hna.hka.archive.management.Merchant.model.SysShopWriteOffLog">
        insert into SYS_SHOP_WRITE_OFF_LOG
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="writeOffId != null">
                WRITE_OFF_ID,
            </if>
            <if test="exchangeId != null">
                EXCHANGE_ID,
            </if>
            <if test="exchangeName != null">
                EXCHANGE_NAME,
            </if>
            <if test="scenicSpotId != null">
                SCENIC_SPOT_ID,
            </if>
            <if test="scenicSpotName != null">
                SCENIC_SPOT_NAME,
            </if>
            <if test="shopId != null">
                SHOP_ID,
            </if>
            <if test="shopName != null">
                SHOP_NAME,
            </if>
            <if test="writeOffDate != null">
                WRITE_OFF_DATE,
            </if>
            <if test="writeOffUserId != null">
                WRITE_OFF_USER_ID,
            </if>
            <if test="writeOffUserPhone != null">
                WRITE_OFF_USER_PHONE,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="writeOffId != null">
                #{writeOffId,jdbcType=BIGINT},
            </if>
            <if test="exchangeId != null">
                #{exchangeId,jdbcType=BIGINT},
            </if>
            <if test="exchangeName != null">
                #{exchangeName,jdbcType=VARCHAR},
            </if>
            <if test="scenicSpotId != null">
                #{scenicSpotId,jdbcType=BIGINT},
            </if>
            <if test="scenicSpotName != null">
                #{scenicSpotName,jdbcType=VARCHAR},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=BIGINT},
            </if>
            <if test="shopName != null">
                #{shopName,jdbcType=VARCHAR},
            </if>
            <if test="writeOffDate != null">
                #{writeOffDate,jdbcType=VARCHAR},
            </if>
            <if test="writeOffUserId != null">
                #{writeOffUserId,jdbcType=BIGINT},
            </if>
            <if test="writeOffUserPhone != null">
                #{writeOffUserPhone,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hna.hka.archive.management.Merchant.model.SysShopWriteOffLog">
        update SYS_SHOP_WRITE_OFF_LOG
        <set>
            <if test="exchangeId != null">
                EXCHANGE_ID = #{exchangeId,jdbcType=BIGINT},
            </if>
            <if test="exchangeName != null">
                EXCHANGE_NAME = #{exchangeName,jdbcType=VARCHAR},
            </if>
            <if test="scenicSpotId != null">
                SCENIC_SPOT_ID = #{scenicSpotId,jdbcType=BIGINT},
            </if>
            <if test="scenicSpotName != null">
                SCENIC_SPOT_NAME = #{scenicSpotName,jdbcType=VARCHAR},
            </if>
            <if test="shopId != null">
                SHOP_ID = #{shopId,jdbcType=BIGINT},
            </if>
            <if test="shopName != null">
                SHOP_NAME = #{shopName,jdbcType=VARCHAR},
            </if>
            <if test="writeOffDate != null">
                WRITE_OFF_DATE = #{writeOffDate,jdbcType=VARCHAR},
            </if>
            <if test="writeOffUserId != null">
                WRITE_OFF_USER_ID = #{writeOffUserId,jdbcType=BIGINT},
            </if>
            <if test="writeOffUserPhone != null">
                WRITE_OFF_USER_PHONE = #{writeOffUserPhone,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=VARCHAR},
            </if>
        </set>
        where WRITE_OFF_ID = #{writeOffId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hna.hka.archive.management.Merchant.model.SysShopWriteOffLog">
        update SYS_SHOP_WRITE_OFF_LOG
        set EXCHANGE_ID          = #{exchangeId,jdbcType=BIGINT},
            EXCHANGE_NAME        = #{exchangeName,jdbcType=VARCHAR},
            SCENIC_SPOT_ID       = #{scenicSpotId,jdbcType=BIGINT},
            SCENIC_SPOT_NAME     = #{scenicSpotName,jdbcType=VARCHAR},
            SHOP_ID              = #{shopId,jdbcType=BIGINT},
            SHOP_NAME           = #{shopName,jdbcType=VARCHAR},
            WRITE_OFF_DATE       = #{writeOffDate,jdbcType=VARCHAR},
            WRITE_OFF_USER_ID    = #{writeOffUserId,jdbcType=BIGINT},
            WRITE_OFF_USER_PHONE = #{writeOffUserPhone,jdbcType=VARCHAR},
            CREATE_DATE          = #{createDate,jdbcType=VARCHAR},
            UPDATE_DATE          = #{updateDate,jdbcType=VARCHAR}
        where WRITE_OFF_ID = #{writeOffId,jdbcType=BIGINT}
    </update>
</mapper>